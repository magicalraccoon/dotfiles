'comment': 'Pico-8 Syntax: Version 0.1 (based on lua syntax version 0.8)'
'fileTypes': [
  'p8'
]
'firstLineMatch': '^pico-8 cartridge // http://www.pico-8.com$'
'name': 'Pico8'
'patterns': [
  {
    'begin': '__lua__'
    'end': '^__'
    'patterns': [
      {
        'captures':
          '1':
            'name': 'keyword.control.p8'
          '2':
            'name': 'entity.name.function.scope.p8'
          '3':
            'name': 'entity.name.function.p8'
          '4':
            'name': 'punctuation.definition.parameters.begin.p8'
          '5':
            'name': 'variable.parameter.function.p8'
          '6':
            'name': 'punctuation.definition.parameters.end.p8'
        'match': '\\b(function)(?:\\s+([a-zA-Z_.:]+[.:])?([a-zA-Z_]\\w*)\\s*)?(\\()([^)]*)(\\))'
        'name': 'meta.function.p8'
      }
      {
        'match': '(?<![\\d.])\\s0x[a-fA-F\\d]+|\\b\\d+(\\.\\d+)?([eE]-?\\d+)?|\\.\\d+([eE]-?\\d+)?'
        'name': 'constant.numeric.p8'
      }
      {
        'begin': '\''
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.string.begin.p8'
        'end': '\''
        'endCaptures':
          '0':
            'name': 'punctuation.definition.string.end.p8'
        'name': 'string.quoted.single.lua'
        'patterns': [
          {
            'include': 'punctuation.definition.string.begin.p8'
          }
          {
            'include': 'punctuation.definition.string.end.p8'
          }
          {
            'match': '\\\\.'
            'name': 'constant.character.escape.p8'
          }
        ]
      }
      {
        'begin': '"'
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.string.begin.p8'
        'end': '"'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.string.end.p8'
        'name': 'string.quoted.double.p8'
        'patterns': [
          {
            'include': 'punctuation.definition.string.begin.p8'
          }
          {
            'include': 'punctuation.definition.string.end.p8'
          }
          {
            'match': '\\\\.'
            'name': 'constant.character.escape.p8'
          }
        ]
      }
      {
        'begin': '(?<!--)\\[(=*)\\['
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.string.begin.p8'
        'end': '\\]\\1\\]'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.string.end.p8'
        'name': 'string.quoted.other.multiline.p8'
      }
      {
        'begin': '--\\[(=*)\\['
        'captures':
          '0':
            'name': 'punctuation.definition.comment.p8'
        'end': '\\]\\1\\]'
        'name': 'comment.block.p8'
      }
      {
        'begin': '(^[ \\t]+)?(?=--(?!\\[(=*)\\[))'
        'beginCaptures':
          '1':
            'name': 'punctuation.whitespace.comment.leading.p8'
        'end': '(?!\\G)'
        'patterns': [
          {
            'begin': '--'
            'beginCaptures':
              '0':
                'name': 'punctuation.definition.comment.p8'
            'end': '\\n'
            'name': 'comment.line.double-dash.p8'
          }
        ]
      }
      {
        'match': '\\b(and|or|not|break|do|else|for|if|elseif|return|then|repeat|while|until|end|function|local|in)\\b'
        'name': 'keyword.control.p8'
      }
      {
        'match': '(?<![^.]\\.|:)\\b(false|nil|true)\\b|(?<![.])\\.{3}(?!\\.)'
        'name': 'constant.language.p8'
      }
      {
        'match': '(?<![^.]\\.|:)\\b(self)\\b'
        'name': 'variable.language.self.p8'
      }
      {
        'match': '(?<![^.]\\.|:)\\b(load|save|folder|ls|run|resume|reboot|stat|info|flip|printh|clip|pget|pset|sget|sset|fget|fset|print|cursor|color|cls|camera|circ|circfill|line|rect|rectfill|pal|palt|spr|sspr|add|del|all|foreach|pairs|btn|btnp|sfx|music|mget|mset|map|peek|poke|memcpy|reload|cstore|memset|max|min|mid|flr|cos|sin|atan2|sqrt|abs|rnd|srand|band|bor|bxor|bnot|shl|shr|sub|cartdata|dget|dset|setmetatable|cocreate|coresume|costatus|yield)\\b(?=\\s*(?:[({"\']|\\[\\[))'
        'name': 'support.function.p8'
      }
      {
        'match': '\\b([A-Za-z_]\\w*)\\b(?=\\s*(?:[({"\']|\\[\\[))'
        'name': 'support.function.any-method.p8'
      }
      {
        'match': '(?<=[^.]\\.|:)\\b([A-Za-z_]\\w*)'
        'name': 'variable.other.p8'
      }
      {
        'match': '\\+|-|%|#|\\*|\\/|\\^|==?|~=|<=?|>=?|(?<!\\.)\\.{2}(?!\\.)'
        'name': 'keyword.operator.p8'
      }
    ]
  }
  {
    'begin': 'gfx__'
    'end': '^__'
    'patterns':[
      {
        'match': '0+'
        'name': 'constant.other.p8.gfx.zero'
      }
      {
        'match': '1+'
        'name': 'constant.other.p8.gfx.one'
      }
      {
        'match': '2+'
        'name': 'constant.other.p8.gfx.two'
      }
      {
        'match': '3+'
        'name': 'constant.other.p8.gfx.three'
      }
      {
        'match': '4+'
        'name': 'constant.other.p8.gfx.four'
      }
      {
        'match': '5+'
        'name': 'constant.other.p8.gfx.five'
      }
      {
        'match': '6+'
        'name': 'constant.other.p8.gfx.six'
      }
      {
        'match': '7+'
        'name': 'constant.other.p8.gfx.seven'
      }
      {
        'match': '8+'
        'name': 'constant.other.p8.gfx.eight'
      }
      {
        'match': '9+'
        'name': 'constant.other.p8.gfx.nine'
      }
      {
        'match': 'a+'
        'name': 'constant.other.p8.gfx.a'
      }
      {
        'match': 'b+'
        'name': 'constant.other.p8.gfx.b'
      }
      {
        'match': 'c+'
        'name': 'constant.other.p8.gfx.c'
      }
      {
        'match': 'd+'
        'name': 'constant.other.p8.gfx.d'
      }
      {
        'match': 'e+'
        'name': 'constant.other.p8.gfx.e'
      }
      {
        'match': 'f+'
        'name': 'constant.other.p8.gfx.f'
      }
    ]
  }
]
'scopeName': 'source.p8'
